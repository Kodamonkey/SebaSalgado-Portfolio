---
import GitHub from "./icons/GitHub.astro";
import NextJS from "./icons/NextJS.astro";
import Tailwind from "./icons/Tailwind.astro";
import PowerAutomate from "./icons/PowerAutomate.astro";
import Excel from "./icons/Excel.astro";
import Link from "./icons/Link.astro";
import LinkButton from "./LinkButton.astro";
import Python from "./icons/Python.astro";
import React from "./icons/React.astro";
import Django from "./icons/Django.astro";
import { Debug } from "astro:components";

const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  POWER_AUTOMATE: {
    name: "Power Automate",
    class: "bg-[#0078D4] text-white", // Color de la marca de Microsoft Power Automate
    icon: PowerAutomate, // Asegúrate de tener este icono importado o definido
  },
  EXCEL: {
    name: "Excel",
    class: "bg-[#217346] text-black", // Color característico de Excel
    icon: Excel, // Asegúrate de tener este icono importado o definido
  },
  PYTHON: {
    name: "Python",
    class: "bg-[#4B8BBE] text-white",
    icon: Python,
  },
  REACT: {
    name: "React",
    class: "bg-[#61DAFB] text-black",
    icon: React,
  },
  DJANGO: {
    name: "Django",
    class: "bg-[#44B78B] text-black", // Verde claro y texto en verde oscuro
    icon: Django,
  },
};
const PROJECTS = [
  {
    title: "Smart Canchas USM - Sistema de agendamiento de canchas de la UTFSM",
    description:
      "Proyecto centrado en optimizar el sistema de agendamiento de canchas deportivas (fútbol y tenis) en la Universidad Técnica Federico Santa María. Actualmente implementado como sistema oficial.",
    link: "",
    github: "",
    image: "/projects/smartCanchas.webp",
    tags: [TAGS.EXCEL, TAGS.POWER_AUTOMATE],
  },
  {
    title: "Digicore - Sistema que simula una red manejada con intenciones",
    description:
      "Sistema que permite simular una red gestionada por intenciones, utilizando texto en castellano como interfaz. Este sistema es capaz de procesar las intenciones del usuario, traducirlas en configuraciones de red específicas y aplicarlas en una red simulada.",
    link: "https://usmcl-my.sharepoint.com/personal/florencia_ramirez_usm_cl/_layouts/15/stream.aspx?id=%2Fpersonal%2Fflorencia_ramirez_usm_cl%2FDocuments%2FUniversidad%2FSemestre%2008%2FIngeniería%20de%20Software%2FHito%206%20y%207%2FVideo_presentacion_ISW%2Emp4&nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&ga=1&referrer=StreamWebApp%2EWeb&referrerScenario=AddressBarCopied%2Eview%2E03ad7d9c-3bde-4c53-8dfd-4c5754e4ba7a",
    github:
      "https://github.com/INF225-2023-2-P201/02-digicore?tab=readme-ov-file",
    image: "/projects/Digicore.png",
    tags: [TAGS.PYTHON, TAGS.REACT, TAGS.DJANGO],
  },
  {
    title:
      "Tracker Universitario - Interfaz para eventos universitarios y personalizados",
    description:
      "Tracker de eventos en la universidad: Proyecto con solo interfaz que representa un sistema que gestione eventos universitarios y personalizados y que sea en un futuro integrado con la pagina web de la universidad.",
    link: "https://tracker-universitario.vercel.app",
    github: "https://github.com/Kodamonkey/tracker-universitario",
    image: "/projects/Tracker.png",
    tags: [TAGS.REACT],
  },
  /*{
    title: "AdventJS - Retos de programación con JavaScript y TypeScript",
    description:
      "Plataforma gratuita con retos de programación. Más de 1 millón de visitas en un mes. +50K retos completados. Creada desde cero con Next.js, React y Tailwind CSS.",
    link: "https://adventjs.dev",
    image: "/projects/adventjs.webp",
    tags: [TAGS.NEXT, TAGS.TAILWIND],
  },*/
];
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
        <div class="w-full md:w-1/2">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
            <img
              class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
              loading="lazy"
              src={image}
            />
          </div>
        </div>

        <div class="w-full md:w-1/2 md:max-w-lg">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
            {title}
          </h3>
          <div class="flex flex-wrap mt-2">
            <ul class="flex flex-row mb-2 gap-x-2">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                  >
                    <tag.icon class="size-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>

            <div class="mt-2 text-gray-700 dark:text-gray-400">
              {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {github && (
                <LinkButton href={github}>
                  <GitHub class="size-6" />
                  Code
                </LinkButton>
              )}
              {link && (
                <LinkButton href={link}>
                  <Link class="size-4" />
                  Preview
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>
